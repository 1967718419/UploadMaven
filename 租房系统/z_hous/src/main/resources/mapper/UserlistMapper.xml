<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hous.mapper.UserlistMapper" >
  <resultMap id="BaseResultMap" type="com.hous.pojo.Userlist" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  
    <resultMap id="zuResultMap" type="com.hous.pojo.Userlist" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
     <result column="user_id" property="userId" jdbcType="INTEGER" />
     <collection property="zulist" ofType="com.hous.pojo.Zulist">
			<id property="zid" column="zid"/>	
		<!--用户id已经在user对象中存在，此处可以不设置-->
			<!-- <result property="userId" column="id"/> -->
			<result property="houseId" column="house_id"/>
			<result property="address" column="address"/>
			<result property="contractId" column="contract_id"/>
			<result property="price" column="price"/>
			<result property="status" column="status"/>
		</collection>
     
  </resultMap>
  
    <resultMap id="applyResultMap" type="com.hous.pojo.Userlist" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
     <result column="user_id" property="userId" jdbcType="INTEGER" />
     <collection property="apply" ofType="com.hous.pojo.Apply">
			<id property="applyId" column="apply_id"/>	
		<!--用户id已经在user对象中存在，此处可以不设置-->
			<!-- <result property="userId" column="id"/> -->
			<result property="houseId" column="house_id"/>
			<result property="address" column="address"/>
			<result property="area" column="area"/>
			<result property="price" column="price"/>
			<result property="status" column="status"/>
		</collection>
     
  </resultMap>
  
       <resultMap id="applyoutResultMap" type="com.hous.pojo.Userlist" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
     <result column="user_id" property="userId" jdbcType="INTEGER" />
     <collection property="applyout" ofType="com.hous.pojo.Applyout">
			<id property="aoid" column="aoid"/>	
		<!--用户id已经在user对象中存在，此处可以不设置-->
			<!-- <result property="userId" column="id"/> -->
			<result property="houseId" column="house_id"/>
			<result property="address" column="address"/>
			<result property="userlistId" column="userlist_id"/>
			
			<result property="status" column="status"/>
		</collection>
     
  </resultMap>
      <resultMap id="userMap" type="com.hous.pojo.Userlist" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
     <result column="user_id" property="userId" jdbcType="INTEGER" />
     <association property="user" javaType="com.hous.pojo.User">
			<!-- column:user表的主键对应的列  property：user对象中id属性-->
			<id column="id" property="id"/>
			<result column="username" property="username"/>
			<result column="password" property="password"/>
		</association>
  </resultMap>
   <resultMap id="checkoutResultMap" type="com.hous.pojo.Userlist" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
     <result column="user_id" property="userId" jdbcType="INTEGER" />
     <collection property="checkout" ofType="com.hous.pojo.Checkout">
			<id property="cid" column="cid"/>	
		<!--用户id已经在user对象中存在，此处可以不设置-->
			<!-- <result property="userId" column="id"/> -->
			<result property="houseId" column="house_id"/>
			<result property="address" column="address"/>
			<result property="userlistId" column="userlist_id"/>
			
			<result property="status" column="status"/>
		</collection>
     
  </resultMap>
  
  	<select id="getmycheckout" resultMap="checkoutResultMap" parameterType="Integer">
		SELECT
	u.*, c.*
FROM
	`userlist` u
, checkout c where u.id = c.userlist_id and u.id=#{id}
	</select>
  
  	<select id="checkuserlists" parameterType="Integer" resultType="com.hous.pojo.Userlist">	
        select ulist.* from user u,userlist ulist where u.id = ulist.user_id and user_id=#{id}
	</select>
	
	 	<select id="checkuserlist" parameterType="String" resultType="com.hous.pojo.Userlist">
		select * from userlist where idcard=#{idcard}
	</select>
	
		<insert id="insertuserlist" parameterType="com.hous.pojo.Userlist">
	  insert into userlist(name,idcard,phone,user_id) 
	  values(#{name},#{idcard},#{phone},#{userId})
	</insert>
	
		<select id="finduserlistupdate" parameterType="com.hous.pojo.Userlist" resultType="com.hous.pojo.Userlist">
		select * from userlist where idcard=#{idcard} and id!=#{id}
	</select>
	
	<select id="findalluserlist" resultMap="userMap">
				SELECT
			u.*, ul.*
		FROM
			`user` u
		, userlist ul where u.id = ul.user_id and u.type='zuke'
			</select>
	
		<update id="updateuserlist" parameterType="com.hous.pojo.Userlist">
		update userlist set name=#{name},idcard=#{idcard},phone=#{phone}
		where id=#{id}
</update>

  <delete id="deleteuserlist" parameterType="Integer">
  delete from userlist where user_id=#{id}
  </delete>
  
   <delete id="deleteuser" parameterType="Integer">
  delete from user where id=#{id}
  </delete>
  
  
  
  <select id="getmyapplyout" resultMap="applyoutResultMap" parameterType="Integer">
		SELECT
	u.*, a.*
FROM
	`userlist` u
, apply a WHERE u.id = a.userlist_id AND u.id=#{id} AND STATUS='已拒绝'
	</select>
  
 <select id="getmyapply" resultMap="applyResultMap" parameterType="Integer">
		SELECT
	u.*, a.*
FROM
	`userlist` u
, apply a where u.id = a.userlist_id and u.id=#{id} and status='申请中'
	</select>
  
   	<select id="findhasuserlist" parameterType="Integer" resultType="com.hous.pojo.Userlist">
		select * from userlist where user_id=#{userId}
	</select>
	
	 <select id="getUserzuList" resultMap="zuResultMap" parameterType="Integer">
		SELECT
	    u.*, z.*
		FROM
			`userlist` u
		, zulist z where u.id = z.userlist_id and u.id=#{id}
	</select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, idcard, name, phone, user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hous.pojo.UserlistExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.hous.pojo.UserlistKey" >
    select 
    <include refid="Base_Column_List" />
    from userlist
    where id = #{id,jdbcType=INTEGER}
      and idcard = #{idcard,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.hous.pojo.UserlistKey" >
    delete from userlist
    where id = #{id,jdbcType=INTEGER}
      and idcard = #{idcard,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hous.pojo.UserlistExample" >
    delete from userlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hous.pojo.Userlist" >
    insert into userlist (id, idcard, name, 
      phone, user_id)
    values (#{id,jdbcType=INTEGER}, #{idcard,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hous.pojo.Userlist" >
    insert into userlist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hous.pojo.UserlistExample" resultType="java.lang.Integer" >
    select count(*) from userlist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update userlist
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.idcard != null" >
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update userlist
    set id = #{record.id,jdbcType=INTEGER},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hous.pojo.Userlist" >
    update userlist
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and idcard = #{idcard,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hous.pojo.Userlist" >
    update userlist
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
      and idcard = #{idcard,jdbcType=VARCHAR}
  </update>
</mapper>