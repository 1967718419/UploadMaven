<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hous.mapper.WrongMapper" >
  <resultMap id="BaseResultMap" type="com.hous.pojo.Wrong" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="house_id" property="houseId" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="DATE" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="userlist_id" property="userlistId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hous.pojo.Wrong" extends="BaseResultMap" >
    <result column="detail" property="detail" jdbcType="LONGVARCHAR" />
  </resultMap>
  
    <select id="findwrong" parameterType="com.hous.pojo.QueryVo" resultMap="BaseResultMap">
		select * from wrong 
		  <where>
		
		<if test="userlist_id!=null and userlist_id!=''">
		and userlist_id=#{userlistId}
		</if>
		
		</where>
	</select>
	<select id="findbyid" parameterType="Integer" resultType="com.hous.pojo.Wrong">
		select * from wrong 
		  where id=#{id}
	</select>
	<insert id="insertwrong" parameterType="com.hous.pojo.Wrong" >
		 insert into wrong(house_id,address,date,detail,status,name,userlist_id) 
	  values(#{houseId},#{address},#{date},#{detail},#{status},#{name},#{userlistId})
	</insert>
	<delete id="deletewrong" parameterType="Integer" >
		delete from wrong  where id=#{id}
	</delete>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, house_id, address, date, name, userlist_id, status
  </sql>
  <sql id="Blob_Column_List" >
    detail
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hous.pojo.WrongExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wrong
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hous.pojo.WrongExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wrong
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from wrong
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from wrong
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hous.pojo.WrongExample" >
    delete from wrong
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hous.pojo.Wrong" >
    insert into wrong (id, house_id, address, 
      date, name, userlist_id, 
      status, detail)
    values (#{id,jdbcType=INTEGER}, #{houseId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{date,jdbcType=DATE}, #{name,jdbcType=VARCHAR}, #{userlistId,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{detail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hous.pojo.Wrong" >
    insert into wrong
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="houseId != null" >
        house_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="userlistId != null" >
        userlist_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="detail != null" >
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="houseId != null" >
        #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="userlistId != null" >
        #{userlistId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hous.pojo.WrongExample" resultType="java.lang.Integer" >
    select count(*) from wrong
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update wrong
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.houseId != null" >
        house_id = #{record.houseId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.userlistId != null" >
        userlist_id = #{record.userlistId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null" >
        detail = #{record.detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update wrong
    set id = #{record.id,jdbcType=INTEGER},
      house_id = #{record.houseId,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      name = #{record.name,jdbcType=VARCHAR},
      userlist_id = #{record.userlistId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      detail = #{record.detail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update wrong
    set id = #{record.id,jdbcType=INTEGER},
      house_id = #{record.houseId,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      name = #{record.name,jdbcType=VARCHAR},
      userlist_id = #{record.userlistId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hous.pojo.Wrong" >
    update wrong
    <set >
      <if test="houseId != null" >
        house_id = #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="userlistId != null" >
        userlist_id = #{userlistId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hous.pojo.Wrong" >
    update wrong
    set house_id = #{houseId,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      name = #{name,jdbcType=VARCHAR},
      userlist_id = #{userlistId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hous.pojo.Wrong" >
    update wrong
    set house_id = #{houseId,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      name = #{name,jdbcType=VARCHAR},
      userlist_id = #{userlistId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>